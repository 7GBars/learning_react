import React, {Suspense, use, useRef} from 'react';



// ============ –ú–û–ö –ê–°–ò–ù–•–†–û–ù–ù–û–ì–û API ============
function fetchUserProfile() {
  return new Promise<{ name: string; email: string; role: string }>((resolve) => {
    setTimeout(() => {
      resolve({
        name: "–ï–ª–µ–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞",
        email: "elena@example.com",
        role: "Senior Frontend Developer",
      });
    }, 2000); // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏ 2 —Å–µ–∫
  });
}
const userProfilePromise = fetchUserProfile();
// ============ –ö–û–ú–ü–û–ù–ï–ù–¢, –ò–°–ü–û–õ–¨–ó–£–Æ–©–ò–ô use() ============
const UserProfile = () => {


  // ‚úÖ –¢–µ–ø–µ—Ä—å use() –ø–æ–ª—É—á–∞–µ—Ç –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –ø—Ä–æ–º–∏—Å
  const user = use(userProfilePromise);

  return (
    <div className="user-profile">
      <h2>üë§ {user.name}</h2>
      <p><strong>Email:</strong> {user.email}</p>
      <p><strong>–†–æ–ª—å:</strong> {user.role}</p>
    </div>
  );
}

// ============ –û–°–ù–û–í–ù–û–ô –ö–û–ú–ü–û–ù–ï–ù–¢ –° Suspense ============
export const UseWithPromise = () =>{
  return (
    <div className="app">
      <h1>–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</h1>
      <Suspense fallback={<div className="loading">‚è≥ –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å...</div>}>
        <UserProfile />
      </Suspense>
    </div>
  );
}
